[package]
name = "vk"
version = "0.3.2"
edition = "2024"
license = "ISC"

[dependencies]
clap = { version = "4.5.40", features = ["derive"] }
reqwest = { version = "0.11.23", features = ["json", "rustls-tls"] }
serde = { version = "1.0.196", features = ["derive"] }
serde_json = "1.0.113"
serde_path_to_error = "0.1.17"
tokio = { version = "1.36.0", features = ["rt-multi-thread", "macros"] }
termimad = "0.33.0"
thiserror = "1.0.57"
log = "0.4"
env_logger = "0.11"
url = "2.5.0"
regex = "1.10.3"
diffy = "0.4.2"
chrono = { version = "0.4.41", features = ["serde", "clock"] }
anyhow = "1.0"
backon = "1.5.2"
html5ever = "0.35.0"
markup5ever_rcdom = "0.35.0+unofficial"
ortho_config = { version = "0.5.0-alpha2", features = ["json5", "yaml"] }
# Enabling these features expands file formats; precedence stays: defaults < file < env < CLI.
# Configuration parser crates required by the `OrthoConfig` derive macro.
figment = { version = "0.10", default-features = false, features = ["env", "toml"] }
xdg = "3"
uncased = "0.9"
figment-json5 = "0.1.1"
# Use the maintained `serde_yaml_ok` fork (MIT/Apache-2.0).
# Alias it as `serde_yaml` because the derive macro expects that crate name.
serde_yaml = { package = "serde_yaml_ok", version = "0.9.36" }
toml = "0.8"

[features]
default = ["ortho_config/toml"]
toml = ["ortho_config/toml"]
json5 = ["ortho_config/json5"]
yaml = ["ortho_config/yaml"]

[dev-dependencies]
tempfile = "3.20.0"
serial_test = "3.2.0"
rstest = "0.25.0"
assert_cmd = "2.0"
third-wheel = "0.6"
tokio = { version = "1.36.0", features = ["full"] }
serde_json = "1.0"
predicates = "3.1"
hyper = "1.6.0"
hyper-util = { version = "0.1.16", features = ["server", "http1", "tokio"] }
http-body-util = "0.1"
bytes = "1"
futures = "0.3"
insta = { version = "1.34", features = ["redactions"] }

[target.'cfg(unix)'.dev-dependencies]
libc = "0.2"

[lints.clippy]
pedantic = { level = "warn", priority = -1 }

# 1. hygiene
# Unfortunately, due to an 'unused-braces' false postive with
# single line rstest fixtures, and the fact that fixtures do
# not permit 'expect' attributes, we must disable this deny.
# allow_attributes                    = "deny"
allow_attributes_without_reason     = "deny"
blanket_clippy_restriction_lints    = "deny"

# 2. debugging leftovers
# Disabled pending further investigation into applicability.
# dbg_macro       = "deny"
# print_stdout    = "deny"
# print_stderr    = "deny"

# 3. panic-prone operations
unwrap_used                     = "deny"
# Expect used in tests. Discoraged in implementation code.
# expect_used                     = "deny"
indexing_slicing                = "deny"
string_slice                    = "deny"
integer_division                = "deny"
integer_division_remainder_used = "deny"

# 4. portability
host_endian_bytes   = "deny"
little_endian_bytes = "deny"
big_endian_bytes    = "deny"

# 5. nursery idiom polish
or_fun_call            = "deny"
option_if_let_else     = "deny"
use_self               = "deny"
string_lit_as_bytes    = "deny"

# 6. numerical foot-guns
float_arithmetic = "deny"
