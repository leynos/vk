name: CI

on:
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
      CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
      CODESCENE_CLI_SHA256: ${{ vars.CODESCENE_CLI_SHA256 }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Rust
        uses: leynos/shared-actions/.github/actions/setup-rust@29a7fec66f03bc55de506565183e12823a46bdfd
      - name: Format
        run: make check-fmt
      - name: Lint
        run: make lint
      - name: Generate coverage
        uses: leynos/shared-actions/.github/actions/generate-coverage@29a7fec66f03bc55de506565183e12823a46bdfd
        with:
          output-path: lcov.info
          format: lcov
      - name: Upload coverage data to CodeScene
        if: ${{ env.CS_ACCESS_TOKEN != '' }}
        uses: leynos/shared-actions/.github/actions/upload-codescene-coverage@29a7fec66f03bc55de506565183e12823a46bdfd
        with:
          format: lcov
          access-token: ${{ env.CS_ACCESS_TOKEN }}
          installer-checksum: ${{ vars.CODESCENE_CLI_SHA256 }}

  # Exercise the experimental REST-based resolve path, ensuring lints and tests
  # pass when the `unstable-rest-resolve` feature is enabled.
  unstable-rest-resolve:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Rust
        uses: leynos/shared-actions/.github/actions/setup-rust@29a7fec66f03bc55de506565183e12823a46bdfd
      - name: Install OpenSSL
        run: sudo apt-get update && sudo apt-get install -y openssl ca-certificates
      - name: Lint (feature-gated)
        run: CARGO="cargo --locked" make lint CLIPPY_FLAGS="--all-targets --features unstable-rest-resolve -- -D warnings"
      - name: Test unstable REST resolve (feature-gated)
        run: RUSTFLAGS="-D warnings" CARGO="cargo --locked" make test
